
--------------------------------------------------------------------
-- PRY2204 - EXP3 - SEMANA 8
-- MiniMarket "Doña Marta"
--------------------------------------------------------------------

--------------------------------------------------------------------
-- LIMPIEZA (Drop en orden inverso de dependencias)
--------------------------------------------------------------------
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE VENTA CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE VENDEDOR CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE EMPLEADO CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE PRODUCTO CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE PROVEEDOR CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE MARCA CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE CATEGORIA CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE SALUD CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE AFP CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE COMUNA CASCADE CONSTRAINTS';
  EXECUTE IMMEDIATE 'DROP TABLE REGION CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN NULL;
END;
/
--------------
--- CASO 1 ---
--------------

--------------------------------------------------------------------
-- TABLAS BASE / CATÁLOGOS
--------------------------------------------------------------------
CREATE TABLE REGION (
  id_region   NUMBER(4)    NOT NULL,
  nom_region  VARCHAR2(255) NOT NULL,
  CONSTRAINT REGION_PK PRIMARY KEY (id_region)
);

CREATE TABLE COMUNA (
  id_comuna   NUMBER(4)     NOT NULL,
  nom_comuna  VARCHAR2(100) NOT NULL,
  cod_region  NUMBER(4)     NOT NULL,
  CONSTRAINT COMUNA_PK PRIMARY KEY (id_comuna),
  CONSTRAINT COMUNA_FK_REGION FOREIGN KEY (cod_region)
    REFERENCES REGION(id_region)
);

-- AFP con IDENTITY: inicia en 210 y aumenta en 6
CREATE TABLE AFP (
  id_afp   NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY
            (START WITH 210 INCREMENT BY 6) NOT NULL,
  nom_afp  VARCHAR2(255) NOT NULL,
  CONSTRAINT AFP_PK PRIMARY KEY (id_afp)
);

CREATE TABLE SALUD (
  id_salud  NUMBER(4)     NOT NULL,
  nom_salud VARCHAR2(40)  NOT NULL,
  CONSTRAINT SALUD_PK PRIMARY KEY (id_salud)
);

CREATE TABLE MEDIO_PAGO (
  id_mpago     NUMBER(3)     NOT NULL,
  nombre_mpago VARCHAR2(50)  NOT NULL,
  CONSTRAINT MEDIO_PAGO_PK PRIMARY KEY (id_mpago)
);

CREATE TABLE CATEGORIA (
  id_categoria    NUMBER(3)      NOT NULL,
  nombre_categoria VARCHAR2(255) NOT NULL,
  CONSTRAINT CATEGORIA_PK PRIMARY KEY (id_categoria)
);

CREATE TABLE MARCA (
  id_marca     NUMBER(3)     NOT NULL,
  nombre_marca VARCHAR2(25)  NOT NULL,
  CONSTRAINT MARCA_PK PRIMARY KEY (id_marca)
);

--------------------------------------------------------------------
-- PROVEEDORES Y PRODUCTOS
--------------------------------------------------------------------
CREATE TABLE PROVEEDOR (
  id_proveedor      NUMBER(5)      NOT NULL,
  nombre_proveedor  VARCHAR2(150)  NOT NULL,
  rut_proveedor     VARCHAR2(10)   NOT NULL,
  telefono          VARCHAR2(10) NOT NULL,
  email             VARCHAR2(200) NOT NULL,
  direccion         VARCHAR2(200) NOT NULL,
  cod_comuna        NUMBER(4)      NOT NULL,
  CONSTRAINT PROVEEDOR_PK PRIMARY KEY (id_proveedor),
  CONSTRAINT PROVEEDOR_FK_COMUNA FOREIGN KEY (cod_comuna)
    REFERENCES COMUNA(id_comuna)
);

CREATE TABLE PRODUCTO (
  id_producto     NUMBER(4)      NOT NULL,
  nombre_producto VARCHAR2(100)  NOT NULL,
  precio_unitario NUMBER(10,0)   NOT NULL,
  origen_nacional CHAR(1)        NOT NULL,   -- 'S'/'N'
  stock_minimo    NUMBER(3)      NOT NULL,
  activo          CHAR(1)        NOT NULL,   -- 'S'/'N'
  cod_marca       NUMBER(3)      NOT NULL,
  cod_categoria   NUMBER(3)      NOT NULL,
  cod_proveedor   NUMBER(5)      NOT NULL,
  CONSTRAINT PRODUCTO_PK PRIMARY KEY (id_producto),
  CONSTRAINT PRODUCTO_FK_MARCA    FOREIGN KEY (cod_marca)    REFERENCES MARCA(id_marca),
  CONSTRAINT PRODUCTO_FK_CATEGORIA FOREIGN KEY (cod_categoria) REFERENCES CATEGORIA(id_categoria),
  CONSTRAINT PRODUCTO_FK_PROVEEDOR FOREIGN KEY (cod_proveedor) REFERENCES PROVEEDOR(id_proveedor)
);

--------------------------------------------------------------------
-- EMPLEADOS Y SUBTIPOS
--------------------------------------------------------------------
CREATE TABLE EMPLEADO (
  id_empleado        NUMBER(4)     NOT NULL,
  rut_empleado       VARCHAR2(10)  NOT NULL,
  nombre_empleado    VARCHAR2(25)  NOT NULL,
  apellido_paterno   VARCHAR2(25)  NOT NULL,
  apellido_materno   VARCHAR2(25)  NOT NULL,
  fecha_contratacion DATE          NOT NULL,
  sueldo_base        NUMBER(10,0)  NOT NULL,
  bono_jefatura      NUMBER(10,0),
  activo             CHAR(1)       NOT NULL, -- 'S'/'N'
  tipo_empleado      VARCHAR2(25) NOT NULL,
  cod_empleado       NUMBER(4),            -- jefe/supervisor
  cod_salud          NUMBER(4)     NOT NULL,
  cod_afp            NUMBER(5)     NOT NULL,
  CONSTRAINT EMPLEADO_PK PRIMARY KEY (id_empleado),
  CONSTRAINT EMPLEADO_FK_SALUD FOREIGN KEY (cod_salud) REFERENCES SALUD(id_salud),
  CONSTRAINT EMPLEADO_FK_AFP   FOREIGN KEY (cod_afp)   REFERENCES AFP(id_afp),
  CONSTRAINT EMPLEADO_FK_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO(id_empleado)
);

-- Subtipo ADMINISTRATIVO (1:1 con EMPLEADO)
CREATE TABLE ADMINISTRATIVO (
  id_empleado NUMBER(4) NOT NULL,
  CONSTRAINT ADMINISTRATIVO_PK PRIMARY KEY (id_empleado),
  CONSTRAINT ADMIN_FK_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado)
);

-- Subtipo VENDEDOR (1:1 con EMPLEADO)
CREATE TABLE VENDEDOR (
  id_empleado    NUMBER(4)    NOT NULL,
  comision_venta NUMBER(5,2) NOT NULL, -- se controlará su rango en CASO 2
  CONSTRAINT VENDEDOR_PK PRIMARY KEY (id_empleado),
  CONSTRAINT VENDEDOR_FK_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado)
);

--------------------------------------------------------------------
-- VENTAS
--------------------------------------------------------------------
-- VENTA con IDENTITY: inicia en 5050 y aumenta en 3
CREATE TABLE VENTA (
  id_venta     NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY
               (START WITH 5050 INCREMENT BY 3) NOT NULL,
  fecha_venta  DATE        NOT NULL,
  total_venta NUMBER(10) NOT NULL,
  cod_mpago    NUMBER(3)   NOT NULL,
  cod_empleado NUMBER(4)   NOT NULL, -- vendedor o administrativo que registra
  CONSTRAINT VENTA_PK PRIMARY KEY (id_venta),
  CONSTRAINT VENTA_FK_MEDIO_PAGO FOREIGN KEY (cod_mpago) REFERENCES MEDIO_PAGO(id_mpago),
  CONSTRAINT VENTA_FK_EMPLEADO  FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE DETALLE_VENTA (
  cod_venta    NUMBER(4)  NOT NULL,
  cod_producto NUMBER(4)   NOT NULL,
  cantidad     NUMBER(6)   NOT NULL,
  CONSTRAINT DETALLE_VENTA_PK PRIMARY KEY (cod_venta, cod_producto),
  CONSTRAINT DET_VENTA_FK_VENTA    FOREIGN KEY (cod_venta)    REFERENCES VENTA(id_venta),
  CONSTRAINT DET_VENTA_FK_PRODUCTO FOREIGN KEY (cod_producto) REFERENCES PRODUCTO(id_producto)
);

COMMIT;


---------------------------------------
--- CASO 2: Modificación del modelo ---
---------------------------------------

--  Sueldo base mínimo de $400.000
ALTER TABLE EMPLEADO
  ADD CONSTRAINT CK_EMPLEADO_SUELDO_BASE
  CHECK (sueldo_base >= 400000);

-- Comisión de vendedor entre 0 y 0.25
ALTER TABLE VENDEDOR
  ADD CONSTRAINT CK_VENDEDOR_COMISION
  CHECK (comision_venta BETWEEN 0 AND 0.25);

-- Stock mínimo de producto debe ser al menos 3 unidades
ALTER TABLE PRODUCTO
  ADD CONSTRAINT CK_PRODUCTO_STOCK_MIN
  CHECK (stock_minimo >= 3);

-- Correo electrónico de proveedor debe ser único
ALTER TABLE PROVEEDOR
  ADD CONSTRAINT UN_PROVEEDOR_EMAIL
  UNIQUE (email);

-- Nombre de marca debe ser único
ALTER TABLE MARCA
  ADD CONSTRAINT UN_MARCA_NOMBRE
  UNIQUE (nombre_marca);

-- Cantidad en detalle de venta debe ser mayor que 0
ALTER TABLE DETALLE_VENTA
  ADD CONSTRAINT CK_DETALLE_VENTA_CANTIDAD
  CHECK (cantidad > 0);

COMMIT;


--------------------------------------------------------------------
-- CASO 3: Poblamiento del Modelo
-------------------------------------------------------------------

CREATE SEQUENCE SEQ_SALUD
  START WITH 2050
  INCREMENT BY 10
  NOCACHE;

CREATE SEQUENCE SEQ_EMPLEADO
  START WITH 750
  INCREMENT BY 3
  NOCACHE;

COMMIT;

--------------------------------------------------------------------
-- TABLA REGION
--------------------------------------------------------------------
INSERT INTO REGION (id_region, nom_region) VALUES (1, 'Región Metropolitana');
INSERT INTO REGION (id_region, nom_region) VALUES (2, 'Valparaíso');
INSERT INTO REGION (id_region, nom_region) VALUES (3, 'Biobío');
INSERT INTO REGION (id_region, nom_region) VALUES (4, 'Los Lagos');

--------------------------------------------------------------------
-- TABLA AFP
--------------------------------------------------------------------
INSERT INTO AFP (id_afp, nom_afp) VALUES (210, 'AFP Habitat');
INSERT INTO AFP (id_afp, nom_afp) VALUES (216, 'AFP Cuprum');
INSERT INTO AFP (id_afp, nom_afp) VALUES (222, 'AFP Provida');
INSERT INTO AFP (id_afp, nom_afp) VALUES (228, 'AFP PlanVital');

--------------------------------------------------------------------
-- TABLA SALUD
--------------------------------------------------------------------
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Colmena');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Banmédica');
INSERT INTO SALUD (id_salud, nom_salud) VALUES (SEQ_SALUD.NEXTVAL, 'Isapre Cruz Blanca');


--------------------------------------------------------------------
-- TABLA MEDIO_PAGO
--------------------------------------------------------------------
INSERT INTO MEDIO_PAGO (id_mpago, nombre_pago) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_pago) VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_pago) VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO (id_mpago, nombre_pago) VALUES (14, 'Cheque');

--------------------------------------------------------------------
-- TABLA EMPLEADO
--------------------------------------------------------------------
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno,
                      fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado,
                      cod_empleado, cod_salud, cod_afp)
VALUES (SEQ_EMPLEADO.NEXTVAL, '11111111-1', 'Marcela', 'González', 'Pérez',
        TO_DATE('15-03-2022','DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo',
        NULL, 2050, 210);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '22222222-2', 'José', 'Muñoz', 'Ramírez',
        TO_DATE('10-07-2021','DD-MM-YYYY'), 900000, 75000, 'S', 'Administrativo',
        NULL, 2060, 216);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '33333333-3', 'Verónica', 'Soto', 'Alarcón',
        TO_DATE('05-01-2020','DD-MM-YYYY'), 880000, 70000, 'S', 'Vendedor',
        750, 2060, 228);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '44444444-4', 'Luis', 'Reyes', 'Fuentes',
        TO_DATE('01-04-2023','DD-MM-YYYY'), 560000, NULL, 'S', 'Vendedor',
        750, 2070, 228);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '55555555-5', 'Claudia', 'Fernández', 'Lagos',
        TO_DATE('15-04-2023','DD-MM-YYYY'), 600000, NULL, 'S', 'Vendedor',
        753, 2070, 216);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '66666666-6', 'Carlos', 'Navarro', 'Vega',
        TO_DATE('01-05-2023','DD-MM-YYYY'), 610000, NULL, 'S', 'Administrativo',
        753, 2060, 210);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '77777777-7', 'Javiera', 'Pino', 'Rojas',
        TO_DATE('10-05-2023','DD-MM-YYYY'), 650000, NULL, 'S', 'Administrativo',
        750, 2050, 210);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '88888888-8', 'Diego', 'Mella', 'Contreras',
        TO_DATE('12-05-2023','DD-MM-YYYY'), 620000, NULL, 'S', 'Vendedor',
        750, 2060, 216);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '99999999-9', 'Fernanda', 'Salas', 'Herrera',
        TO_DATE('18-05-2023','DD-MM-YYYY'), 570000, NULL, 'S', 'Vendedor',
        753, 2070, 228);

INSERT INTO EMPLEADO VALUES (SEQ_EMPLEADO.NEXTVAL, '10101010-0', 'Tomás', 'Vidal', 'Espinoza',
        TO_DATE('01-06-2023','DD-MM-YYYY'), 530000, NULL, 'S', 'Vendedor',
        NULL, 2050, 222);

--------------------------------------------------------------------
-- TABLA VENTA
--------------------------------------------------------------------
INSERT INTO VENTA (id_venta, fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (5050, TO_DATE('12-05-2023','DD-MM-YYYY'), 225990, 12, 771);

INSERT INTO VENTA (id_venta, fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (5053, TO_DATE('23-10-2023','DD-MM-YYYY'), 524990, 13, 777);

INSERT INTO VENTA (id_venta, fecha_venta, total_venta, cod_mpago, cod_empleado)
VALUES (5056, TO_DATE('17-02-2023','DD-MM-YYYY'), 466990, 11, 759);

--------------------------------------------------------------------
-- TABLA VENDEDOR 
--------------------------------------------------------------------
INSERT INTO VENDEDOR (id_empleado, comision_venta) VALUES (756, 0.15);
INSERT INTO VENDEDOR (id_empleado, comision_venta) VALUES (759, 0.10);
INSERT INTO VENDEDOR (id_empleado, comision_venta) VALUES (762, 0.20);
INSERT INTO VENDEDOR (id_empleado, comision_venta) VALUES (771, 0.12);
INSERT INTO VENDEDOR (id_empleado, comision_venta) VALUES (774, 0.18);
INSERT INTO VENDEDOR (id_empleado, comision_venta) VALUES (777, 0.08);


COMMIT;

--------------------------------------------------------------------
-- CASO 4: Recuperación de Datos / Informes
--------------------------------------------------------------------

--------------------------------------------------------------------
-- INFORME 1
-- Empleados activos con bono de jefatura: sueldo + bono
--------------------------------------------------------------------
SELECT 
    e.id_empleado             AS "IDENTIFICADOR",
    e.nombre_empleado || ' ' || e.apellido_paterno || ' ' || e.apellido_materno AS "NOMBRE COMPLETO",
    e.sueldo_base             AS "SALARIO",
    e.bono_jefatura           AS "BONIFICACION",
    (e.sueldo_base + NVL(e.bono_jefatura, 0)) AS "SALARIO SIMULADO"
FROM EMPLEADO e
WHERE e.activo = 'S'
  AND e.bono_jefatura IS NOT NULL
ORDER BY "SALARIO SIMULADO" DESC, e.apellido_paterno DESC;

--------------------------------------------------------------------
-- INFORME 2
-- Empleados con sueldo entre 550.000 y 800.000:
-- mostrar aumento del 8 %
--------------------------------------------------------------------
SELECT
    e.nombre_empleado || ' ' || e.apellido_paterno || ' ' || e.apellido_materno AS "EMPLEADO",
    e.sueldo_base           AS "SUELDO",
    (e.sueldo_base * 0.08)  AS "POSIBLE AUMENTO",
    (e.sueldo_base * 1.08)  AS "SALARIO SIMULADO"
FROM EMPLEADO e
WHERE e.sueldo_base BETWEEN 550000 AND 800000
ORDER BY e.sueldo_base ASC;

COMMIT;


